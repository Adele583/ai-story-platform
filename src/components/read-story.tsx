'use client'

import { useState } from 'react'
import { Button } from "@/components/ui/button"
import { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from "@/components/ui/card"
import { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle, DialogTrigger } from "@/components/ui/dialog"
import { ArrowLeft, ArrowRight, BookOpen, ArrowLeftCircle, Sparkles } from "lucide-react"
import Link from "next/link"
import { useToast } from "@/hooks/use-toast"

// This would typically come from an API or database
const story = {
  id: 1,
  title: "The Quantum Paradox",
  author: "J. Smith",
  category: "Sci-Fi",
  rating: 4.5,
  description: "A mind-bending journey through parallel universes.",
  pages: 320,
  content: [
    "Chapter 1: The Discovery\n\nDr. Elena Reeves stared at the quantum computer's display, her heart racing. The numbers didn't make sense, yet they were undeniable. She had just stumbled upon something that would change the course of human history...",
    "Chapter 2: Parallel Worlds\n\nAs Elena delved deeper into her discovery, she began to realize the implications. The quantum fluctuations weren't just random noiseâ€”they were glimpses into parallel universes, each one a slight variation of our own...",
    // ... more pages ...
  ]
}

export function ReadStory() {
  const [currentPage, setCurrentPage] = useState(0)
  const { toast } = useToast()

  const handleNextPage = () => {
    if (currentPage < story.content.length - 1) {
      setCurrentPage(currentPage + 1)
    }
  }

  const handlePreviousPage = () => {
    if (currentPage > 0) {
      setCurrentPage(currentPage - 1)
    }
  }

  const handleAISummarize = () => {
    toast({
      title: "AI Summary Generated",
      description: "The AI has summarized the story for you.",
    })
    // Here you would typically call an AI service to generate a summary
  }

  return (
    <div className="min-h-screen bg-gray-100 dark:bg-gray-900 text-gray-900 dark:text-white">
      <header className="bg-white dark:bg-gray-800 border-b border-gray-200 dark:border-gray-700 p-4 sticky top-0 z-10">
        <div className="container mx-auto flex justify-between items-center">
          <Link href="/explore" passHref>
            <Button variant="ghost" size="sm">
              <ArrowLeftCircle className="mr-2 h-4 w-4" /> Back to Explore
            </Button>
          </Link>
          <h1 className="text-2xl font-bold">{story.title}</h1>
          <Dialog>
            <DialogTrigger asChild>
              <Button variant="outline" size="sm">
                <Sparkles className="mr-2 h-4 w-4" /> AI Summarize
              </Button>
            </DialogTrigger>
            <DialogContent>
              <DialogHeader>
                <DialogTitle>AI Summary</DialogTitle>
                <DialogDescription>
                  Here's a brief summary of the story generated by AI:
                </DialogDescription>
              </DialogHeader>
              <div className="mt-4">
                <p>
                  "The Quantum Paradox" follows Dr. Elena Reeves as she discovers evidence of parallel universes through quantum computing. Her groundbreaking find leads her on a journey across multiple realities, challenging her understanding of physics and her own place in the multiverse.
                </p>
              </div>
            </DialogContent>
          </Dialog>
        </div>
      </header>

      <main className="container mx-auto p-6">
        <Card className="max-w-2xl mx-auto">
          <CardHeader>
            <CardTitle>Page {currentPage + 1} of {story.content.length}</CardTitle>
            <CardDescription>By {story.author}</CardDescription>
          </CardHeader>
          <CardContent>
            <div className="prose dark:prose-invert">
              {story.content[currentPage].split('\n').map((paragraph, index) => (
                <p key={index}>{paragraph}</p>
              ))}
            </div>
          </CardContent>
          <CardFooter className="flex justify-between">
            <Button 
              onClick={handlePreviousPage} 
              disabled={currentPage === 0}
            >
              <ArrowLeft className="mr-2 h-4 w-4" /> Previous Page
            </Button>
            <Button 
              onClick={handleNextPage} 
              disabled={currentPage === story.content.length - 1}
            >
              Next Page <ArrowRight className="ml-2 h-4 w-4" />
            </Button>
          </CardFooter>
        </Card>
      </main>
    </div>
  )
}